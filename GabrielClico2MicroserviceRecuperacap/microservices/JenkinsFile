pipeline {
    agent any
    tools {
        nodejs 'node 20.18.0'
    }
    stages {
        stage('Verificar Repositório') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name:'*/master’]], useRemoteConfigs:[[url: 'https://seurepositorio.git']]])

            }
        }
    }
    stage('Instalar Dependências') {
        steps {
            sh 'node -v'
            sh 'npm install'
            sh 'npm run build'
        }
    }
    stage('Construir Imagem Docker') {
        steps {
            script {
            def appName = 'microservices-nestjs'
            def imageTag = "${appName}:${env.BUILD_ID}"
            // Construir a imagem Docker
            sh "docker build -t ${imageTag} ."
            }
        }
    }
    stage('Fazer Deploy') {
        steps {
            script {
                def appName = 'microservices-nestjs'
                def imageTag = "${appName}:${env.BUILD_ID}"
                // Parar e remover o container existente, se houver
                sh "docker stop ${appName} || true"
                sh "docker rm ${appName} || true"
                // Executar o novo container
                sh "docker run -d --name ${appName} -p 3000:3000 ${imageTag}"
            }
        }
    }
    post {
        success {
            echo 'Deploy realizado com sucesso!'
        }
        failure {
            echo 'Houve um erro durante o deploy.'
        }
    }
}